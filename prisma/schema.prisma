// prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
  output   = "prismaClient"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        String    @id @default(cuid())
  title     String
  content   String
  published Boolean   @default(true)
  createAt  DateTime  @default(now()) @map("create_at")
  authorId  String    @map("author_id")
  author    User      @relation(fields: [authorId], references: [id])
  images    String[]
  views     Int       @default(0)
  likes     Int       @default(0)
  comment   Comment[]

  @@map("post")
}

model Comment {
  id       String   @id @default(cuid())
  content  String
  createAt DateTime @default(now()) @map("create_at")
  postId   String   @map("post_id")
  post     Post     @relation(fields: [postId], references: [id])
  authorId String   @map("author_id")

  @@map("comment")
}

model User {
  id              String    @id
  name            String
  email           String
  emailVerified   Boolean
  image           String?
  createdAt       DateTime
  updatedAt       DateTime
  username        String?
  displayUsername String?
  sessions        Session[]
  accounts        Account[]
  posts           Post[]

  @@unique([email])
  @@unique([username])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
